// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCompanyHRManagement.Infrastructure.Data;

#nullable disable

namespace MyCompanyHRManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyCompanyHRManagement.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Karaağaç Caddesi No:2-6 Sütlüce 34445 Beyoğlu Istanbul",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "info@arcelik.com",
                            Name = "Arçelik A.Ş.",
                            Phone = "+90 212 314 34 34",
                            SubscriptionEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = new Guid("6d89135b-9af7-42c0-b393-14b26a04f8fd")
                        },
                        new
                        {
                            Id = 2,
                            Address = "Aydınevler Mahallesi İnönü Caddesi No:20 Küçükyalı Ofispark 34854 Maltepe Istanbul",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "info@turkcell.com.tr",
                            Name = "Turkcell İletişim Hizmetleri A.Ş.",
                            Phone = "+90 212 313 10 00",
                            SubscriptionEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = new Guid("32fdbf3b-d8ed-417f-a5c7-70a62da29691")
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kısıklı Mahallesi Ferah Caddesi No:1 34692 Büyük Çamlıca Üsküdar Istanbul",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "info@ulker.com.tr",
                            Name = "Ülker Bisküvi Sanayi A.Ş.",
                            Phone = "+90 216 524 25 00",
                            SubscriptionEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = new Guid("fc890933-267d-438d-a482-178a09220beb")
                        },
                        new
                        {
                            Id = 4,
                            Address = "AEROPARK Yenişehir Mahallesi Osmanlı Bulvarı No: 11/A Kurtköy 34912 Pendik Istanbul",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "info@flypgs.com",
                            Name = "Pegasus Hava Taşımacılığı A.Ş.",
                            Phone = "+90 216 560 70 00",
                            SubscriptionEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = new Guid("f65dfcef-1c84-4f76-b5bd-25c2d003c90b")
                        },
                        new
                        {
                            Id = 5,
                            Address = "Nakkaştepe Azizbey Sokak No:1 34674 Kuzguncuk Üsküdar Istanbul",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "info@koc.com.tr",
                            Name = "Koç Holding A.Ş.",
                            Phone = "+90 216 531 00 00",
                            SubscriptionEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenantId = new Guid("3ccd0bcb-448e-49e4-97e4-28f0369ddedc")
                        });
                });

            modelBuilder.Entity("MyCompanyHRManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmet.yilmaz@arcelik.com",
                            FirstName = "Ahmet",
                            HireDate = new DateTime(2010, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Yılmaz",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ayse.kaya@arcelik.com",
                            FirstName = "Ayşe",
                            HireDate = new DateTime(2015, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Kaya",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mehmet.demir@turkcell.com.tr",
                            FirstName = "Mehmet",
                            HireDate = new DateTime(2008, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Demir",
                            Role = 1
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fatma.sahin@turkcell.com.tr",
                            FirstName = "Fatma",
                            HireDate = new DateTime(2018, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Şahin",
                            Role = 0
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1982, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali.ozturk@ulker.com.tr",
                            FirstName = "Ali",
                            HireDate = new DateTime(2012, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Öztürk",
                            Role = 1
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1988, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zeynep.aksoy@flypgs.com",
                            FirstName = "Zeynep",
                            HireDate = new DateTime(2016, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Aksoy",
                            Role = 0
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1975, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mustafa.celik@koc.com.tr",
                            FirstName = "Mustafa",
                            HireDate = new DateTime(2005, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Çelik",
                            Role = 1
                        });
                });

            modelBuilder.Entity("MyCompanyHRManagement.Domain.Entities.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            EndDate = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = 0,
                            Reason = "Yıllık izin",
                            StartDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            EndDate = new DateTime(2023, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = 1,
                            Reason = "Sağlık sorunu",
                            StartDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 6,
                            EndDate = new DateTime(2023, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveType = 0,
                            Reason = "Aile tatili",
                            StartDate = new DateTime(2023, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("MyCompanyHRManagement.Domain.Entities.Employee", b =>
                {
                    b.HasOne("MyCompanyHRManagement.Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MyCompanyHRManagement.Domain.Entities.LeaveRequest", b =>
                {
                    b.HasOne("MyCompanyHRManagement.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
